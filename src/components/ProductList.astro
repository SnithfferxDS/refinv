---
---

<div class="bg-white shadow-md rounded-lg p-6">
  <div id="productList" class="space-y-4">
    Loading products...
  </div>
</div>

<script>
  async function loadProducts() {
    try {
      const response = await fetch('http://localhost:3000/api/products');
      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }
      const products = await response.json();
      
      const productList = document.getElementById('productList');
      if (!products.length) {
        productList.innerHTML = '<p class="text-gray-500">No products available.</p>';
        return;
      }

      productList.innerHTML = products.map(product => `
        <div class="border p-4 rounded-lg">
          <h3 class="font-semibold">${product.name}</h3>
          <p class="text-gray-600">${product.description || 'No description'}</p>
          <div class="flex justify-between mt-2">
            <span class="text-green-600">$${parseFloat(product.price).toFixed(2)}</span>
            <span class="text-blue-600">Stock: ${product.stock}</span>
          </div>
          <div class="mt-2 space-x-2">
            <button 
              onclick="handleTransaction(${product.id}, 'sale')"
              class="bg-red-500 text-white px-3 py-1 rounded hover:bg-red-600 disabled:bg-gray-400"
              ${product.stock <= 0 ? 'disabled' : ''}>
              Sell
            </button>
            <button 
              onclick="handleTransaction(${product.id}, 'purchase')"
              class="bg-green-500 text-white px-3 py-1 rounded hover:bg-green-600">
              Purchase
            </button>
          </div>
        </div>
      `).join('');
    } catch (error) {
      console.error('Error loading products:', error);
      const productList = document.getElementById('productList');
      productList.innerHTML = '<p class="text-red-500">Error loading products. Please try again later.</p>';
    }
  }

  async function handleTransaction(productId, type) {
    const quantity = prompt(`Enter quantity to ${type}:`);
    if (!quantity || isNaN(quantity) || parseInt(quantity) <= 0) {
      alert('Please enter a valid quantity');
      return;
    }

    const price = prompt(`Enter price per unit:`);
    if (!price || isNaN(price) || parseFloat(price) <= 0) {
      alert('Please enter a valid price');
      return;
    }

    try {
      const response = await fetch('http://localhost:3000/api/transactions', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          product_id: productId,
          type,
          quantity: parseInt(quantity),
          price: parseFloat(price)
        }),
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }
      
      await loadProducts();
    } catch (error) {
      console.error('Error processing transaction:', error);
      alert('Error processing transaction. Please try again.');
    }
  }

  // Initial load
  loadProducts();

  // Listen for refresh events
  document.addEventListener('refreshProducts', loadProducts);
</script>