---
import { db, eq } from 'astro:db';
import Layout from '../../../layouts/App.Layout.astro';

const { id } = Astro.params;
const brand = await db.select().from('brands').where(eq('brands.id', id)).get();

if (!brand) {
  return Astro.redirect('/brands');
}

if (Astro.request.method === 'POST') {
  const formData = await Astro.request.formData();
  const name = formData.get('name')?.toString();
  const description = formData.get('description')?.toString();

  if (name) {
    await db.update('brands').set({
      name,
      description,
    }).where(eq('brands.id', id));
    return Astro.redirect('/brands');
  }
}
---

<Layout title="Edit Brand">
  <div class="max-w-2xl mx-auto">
    <form method="POST" class="space-y-6">
      <div>
        <label for="name" class="block text-sm font-medium text-gray-700">Name</label>
        <input
          type="text"
          name="name"
          id="name"
          value={brand.name}
          required
          class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"
        />
      </div>

      <div>
        <label for="description" class="block text-sm font-medium text-gray-700">Description</label>
        <textarea
          name="description"
          id="description"
          rows="3"
          class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"
        >{brand.description}</textarea>
      </div>

      <div class="flex justify-between">
        <button
          type="submit"
          class="inline-flex justify-center rounded-md border border-transparent bg-indigo-600 py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2"
        >
          Update Brand
        </button>
        <button
          type="button"
          class="inline-flex justify-center rounded-md border border-transparent bg-red-600 py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2"
          onclick="deleteBrand()"
        >
          Delete Brand
        </button>
      </div>
    </form>
  </div>

  <script define:vars={{ id }}>
    async function deleteBrand() {
      if (confirm('Are you sure you want to delete this brand?')) {
        const response = await fetch(`/api/brands/${id}`, {
          method: 'DELETE',
        });
        if (response.ok) {
          window.location.href = '/brands';
        }
      }
    }
  </script>
</Layout>